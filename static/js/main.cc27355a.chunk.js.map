{"version":3,"sources":["assets/logo-white.svg","assets/logo-green.svg","assets/check_box_outline_blank.svg","assets/check_box_ticked.svg","styles/widget.styled.js","components/Tooltip.js","components/Widget.js","styles/container.styled.js","App.js","reportWebVitals.js","GlobalStyle.js","index.js"],"names":["WidgetStyled","styled","div","SwatchContainer","SwatchButton","button","props","color","theme","id","LightTooltip","withStyles","tooltip","backgroundColor","palette","common","white","boxShadow","shadows","fontSize","textAlign","maxWidth","arrow","MaterialTooltip","TooltipDiv","title","href","enterDelay","leaveDelay","interactive","PopperProps","modifiers","offset","enabled","className","Widget","widgetNum","fetchedData","useState","checkbox","setCheckbox","setTheme","toggle","setToggle","useEffect","document","documentElement","length","src","logoGreenImg","alt","logoWhiteImg","amount","type","checkboxTickImg","onClick","checkboxUntickImg","ContainerStyled","App","setFetchedData","error","message","setError","a","fetch","data","status","Error","json","response","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cc27355a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.bf7c13b9.svg\";","export default __webpack_public_path__ + \"static/media/logo-green.c704fcc0.svg\";","export default __webpack_public_path__ + \"static/media/check_box_outline_blank.d2e12e85.svg\";","export default __webpack_public_path__ + \"static/media/check_box_ticked.0f49ee97.svg\";","import styled from \"styled-components\";\r\n\r\nexport const WidgetStyled = styled.div`\r\n  /* =======\r\ntypography\r\n=========*/\r\n\r\n  .widget-small-text {\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  .widget-big-text {\r\n    font-size: 18px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .widget-row {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n  }\r\n\r\n  /* =======\r\nlayout\r\n=========*/\r\n\r\n  //widget header section\r\n  .widget-container {\r\n    width: 221px;\r\n    margin-bottom: 37px;\r\n  }\r\n\r\n  //here is where badge theme is used\r\n  .widget-header {\r\n    background-color: var(--badge-color);\r\n    border-radius: 6px;\r\n    padding: 0.5em;\r\n    color: white;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .widget-logo-col {\r\n    width: 20%;\r\n  }\r\n\r\n  .widget-text-col {\r\n    width: 80%;\r\n    margin-left: 0.75em;\r\n  }\r\n  .widget-small-text {\r\n    margin: 0;\r\n    color: var(--font-color);\r\n  }\r\n\r\n  .GS-logo {\r\n    margin: 0;\r\n  }\r\n\r\n  .widget-big-text {\r\n    margin: 0;\r\n    color: var(--font-color);\r\n  }\r\n\r\n  //widget body\r\n  .widget-body {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  //for tooltip hover pop up\r\n  .info-icon {\r\n    width: 12px;\r\n  }\r\n\r\n  .widget-row {\r\n    color: #3b755f;\r\n    margin-bottom: 5px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    text-align: start;\r\n    align-items: center;\r\n  }\r\n\r\n  /* =======\r\nLINK TO PUBLIC PROFILE CHECKBOX FEATURE\r\n=========*/\r\n\r\n  .checkbox {\r\n    width: 22px;\r\n    height: 22px;\r\n    border: 4px solid transparent;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .checkbox:hover,\r\n  .checkbox:focus {\r\n    width: 22px;\r\n    height: 22px;\r\n    background: #afc6bd;\r\n    border-radius: 50%;\r\n    border: 4px solid #afc6bd;\r\n    transition: all 0.5s;\r\n  }\r\n\r\n  /* =======\r\nACTIVATE BADGE SLIDER FEATURE\r\n=========*/\r\n  /* The switch - the box around the slider */\r\n  .switch {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 25px;\r\n  }\r\n\r\n  /* Hide default HTML checkbox */\r\n  .switch input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  /* The slider */\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f9f9f9;\r\n    border: 2px solid #afc6bd;\r\n    border-radius: 100px;\r\n\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 20px;\r\n    width: 20px;\r\n    left: 0px;\r\n    bottom: 0.5px;\r\n    background-color: #f9f9f9;\r\n    border: 1px solid #f2ebdb;\r\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.35);\r\n    border-radius: 100px;\r\n\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n  }\r\n\r\n  input:checked + .slider {\r\n    background-color: #3b755f;\r\n  }\r\n\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px #f9f9f9;\r\n  }\r\n\r\n  input:checked + .slider:before {\r\n    -webkit-transform: translateX(26px);\r\n    -ms-transform: translateX(26px);\r\n    transform: translateX(26px);\r\n  }\r\n\r\n  /* Rounded sliders */\r\n  .slider.round {\r\n    border-radius: 34px;\r\n    border: 1px solid #afc6bd;\r\n  }\r\n\r\n  .slider.round:before {\r\n    border-radius: 50%;\r\n  }\r\n\r\n  .slider.round:hover:before,\r\n  .slider.round:focus:before {\r\n    border: 6px solid rgba(175, 198, 189, 0.5);\r\n    opacity: 75%;\r\n    margin: -4px;\r\n    transition: all 0.5s;\r\n  }\r\n`;\r\n\r\n/* =======\r\nBADGE COLOUR SWATCH FEATURE\r\n=========*/\r\nexport const SwatchContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const SwatchButton = styled.button`\r\n  width: 16px;\r\n  height: 16px;\r\n  background-color: ${(props) => props.color};\r\n  cursor: pointer;\r\n  margin: 2px;\r\n  border: ${(props) =>\r\n    props.theme === props.id ? \"1.5px solid #b0b0b0\" : \"transparent\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => props.color};\r\n    opacity: 80%;\r\n  }\r\n\r\n  &:active {\r\n    border: 1.5px solid #b0b0b0;\r\n  }\r\n`;\r\n\r\nexport const blueTheme = {\r\n  backgroundColor: \"#2e3a8c\",\r\n  color: \"#F9F9F9\",\r\n};\r\n\r\nexport const greenTheme = {\r\n  backgroundColor: \"#3B755F\",\r\n  color: \"#F9F9F9\",\r\n};\r\n\r\nexport const beigeTheme = {\r\n  backgroundColor: \"#F2EBDB\",\r\n  color: \"#3B755F\",\r\n};\r\n\r\nexport const whiteTheme = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  color: \"#3B755F\",\r\n};\r\n\r\nexport const blackTheme = {\r\n  backgroundColor: \"#212121\",\r\n  color: \"#F9F9F9\",\r\n};\r\n","import MaterialTooltip from \"@material-ui/core/Tooltip\";\r\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"#212121\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 14,\r\n    textAlign: \"center\",\r\n    maxWidth: \"258px\",\r\n  },\r\n\r\n  arrow: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}))(MaterialTooltip);\r\n\r\nexport const TooltipDiv = () => {\r\n  return (\r\n    <LightTooltip\r\n      arrow\r\n      title={\r\n        <div>\r\n          <p>\r\n            This widget links directly to your public profile so that you can\r\n            easily share your impact with your customers. Turn it off here if\r\n            you do not want the badge to link to it.\r\n          </p>\r\n          <a href=\"google.com\">View Public Profile</a>\r\n          <p></p>\r\n        </div>\r\n      }\r\n      aria-label=\"more info\"\r\n      enterDelay={250}\r\n      leaveDelay={250}\r\n      interactive\r\n      PopperProps={{\r\n        modifiers: {\r\n          offset: {\r\n            enabled: true,\r\n            offset: \"0px, -10px\",\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <InfoOutlinedIcon className=\"info-icon\" />\r\n    </LightTooltip>\r\n  );\r\n};\r\n","//font only import from css.\r\nimport \"../App.css\";\r\n//imgs\r\nimport logoWhiteImg from \"../assets/logo-white.svg\";\r\nimport logoGreenImg from \"../assets/logo-green.svg\";\r\nimport checkboxUntickImg from \"../assets/check_box_outline_blank.svg\";\r\nimport checkboxTickImg from \"../assets/check_box_ticked.svg\";\r\n//React imports\r\nimport {\r\n  SwatchButton,\r\n  SwatchContainer,\r\n  WidgetStyled,\r\n} from \"../styles/widget.styled\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { TooltipDiv } from \"./Tooltip\";\r\n//utils\r\n\r\nconst Widget = ({ widgetNum, fetchedData }) => {\r\n  const [checkbox, setCheckbox] = useState(true); // Link to public profile\r\n  const [theme, setTheme] = useState(\"blueTheme\"); // Badge colour\r\n  const [toggle, setToggle] = useState(false); // Activate badge\r\n\r\n  // colour swatch\r\n  useEffect(() => {\r\n    document.documentElement.className = theme;\r\n  }, [theme]);\r\n\r\n  return (\r\n    <WidgetStyled>\r\n      {fetchedData.length > 1 && (\r\n        <section className=\"widget-container\">\r\n          <div className=\"widget-header\">\r\n            <div className=\"widget-logo-col\">\r\n              {theme === \"whiteTheme\" ? (\r\n                <img\r\n                  src={logoGreenImg}\r\n                  alt=\"greenspark logo green\"\r\n                  className=\"GS-logo\"\r\n                />\r\n              ) : theme === \"beigeTheme\" ? (\r\n                <img\r\n                  src={logoGreenImg}\r\n                  alt=\"greenspark logo green\"\r\n                  className=\"GS-logo\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={logoWhiteImg}\r\n                  alt=\"greenspark logo white\"\r\n                  className=\"GS-logo\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"widget-text-col\">\r\n              {widgetNum === \"1\" && (\r\n                <div>\r\n                  <h3 className=\"widget-small-text\">This product collects</h3>\r\n                  <h2 className=\"widget-big-text\">\r\n                    {fetchedData[0].amount} {fetchedData[0].type}\r\n                  </h2>\r\n                </div>\r\n              )}\r\n              {widgetNum === \"2\" && (\r\n                <div>\r\n                  <h3 className=\"widget-small-text\">This product plants</h3>\r\n                  <h2 className=\"widget-big-text\">\r\n                    {fetchedData[1].amount} {fetchedData[1].type}\r\n                  </h2>\r\n                </div>\r\n              )}\r\n              {widgetNum === \"3\" && (\r\n                <div>\r\n                  <h3 className=\"widget-small-text\">This product offsets</h3>\r\n                  <h2 className=\"widget-big-text\">\r\n                    {fetchedData[2].amount}kgs of {fetchedData[2].type}\r\n                  </h2>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"widget-body\">\r\n            <div className=\"widget-row\">\r\n              <span className=\"widget-list-item\">\r\n                Link to Public Profile\r\n                <TooltipDiv />\r\n              </span>\r\n\r\n              {!checkbox ? (\r\n                <img\r\n                  src={checkboxUntickImg}\r\n                  alt=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onClick={() => setCheckbox(!checkbox)}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={checkboxTickImg}\r\n                  alt=\"checkbox\"\r\n                  className=\"checkbox\"\r\n                  onClick={() => setCheckbox(!checkbox)}\r\n                />\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"widget-row\">\r\n              <span>Badge colour</span>\r\n              <SwatchContainer>\r\n                <SwatchButton\r\n                  id=\"blueTheme\"\r\n                  color=\"#2E3A8C\"\r\n                  theme={theme}\r\n                  onClick={() => setTheme(\"blueTheme\")}\r\n                />\r\n                <SwatchButton\r\n                  id=\"greenTheme\"\r\n                  color=\"#3B755F\"\r\n                  theme={theme}\r\n                  onClick={() => setTheme(\"greenTheme\")}\r\n                />\r\n                <SwatchButton\r\n                  id=\"beigeTheme\"\r\n                  color=\"#F2EBDB\"\r\n                  theme={theme}\r\n                  onClick={() => setTheme(\"beigeTheme\")}\r\n                />\r\n                <SwatchButton\r\n                  id=\"whiteTheme\"\r\n                  color=\"#FFFFFF\"\r\n                  theme={theme}\r\n                  onClick={() => setTheme(\"whiteTheme\")}\r\n                />\r\n                <SwatchButton\r\n                  id=\"blackTheme\"\r\n                  color=\"#212121\"\r\n                  theme={theme}\r\n                  onClick={() => setTheme(\"blackTheme\")}\r\n                />\r\n              </SwatchContainer>\r\n            </div>\r\n            <div className=\"widget-row\">\r\n              <span>Activate badge</span>\r\n              <label className=\"switch\">\r\n                <input type=\"checkbox\" onClick={() => setToggle(!toggle)} />\r\n                <span className=\"slider round\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </WidgetStyled>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContainerStyled = styled.div`\r\n  /* =======\r\ntypography\r\n=========*/\r\n\r\n  .title {\r\n    font-size: 30px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  /* =======\r\nlayout\r\n=========*/\r\n\r\n  //overall\r\n  .container {\r\n    background-color: #f9f9f9;\r\n  }\r\n\r\n  .container-outer {\r\n    width: 331px;\r\n    box-shadow: 10px 42px 32px rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 1em auto;\r\n  }\r\n\r\n  .container-inner {\r\n    width: 258px;\r\n    margin: 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .title {\r\n    text-align: center;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .title-line {\r\n    margin: 1em 0;\r\n    height: 2px;\r\n    width: 100%;\r\n    background: #b0b0b0;\r\n  }\r\n\r\n\r\n    .body {\r\n      width: 779px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    .title {\r\n      align-self: flex-start;\r\n    }\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport Widget from \"./components/Widget\";\r\nimport { ContainerStyled } from \"./styles/container.styled\";\r\n\r\nfunction App() {\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [error, setError] = useState({ error: false, message: \"\" });\r\n  //api\r\n  useEffect(async () => {\r\n    try {\r\n      const data = await fetch(\"https://getgreenspark.mocklab.io/products\");\r\n      if (data.status !== 200) {\r\n        throw new Error(error);\r\n      }\r\n      const response = await data.json();\r\n      setFetchedData(response);\r\n    } catch (error) {\r\n      setError({ error: true, message: error.message });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ContainerStyled>\r\n        <div className=\"container container-outer\">\r\n          <div className=\"container container-inner\">\r\n            <h1 className=\"title\">Per product widgets</h1>\r\n            <span className=\"title-line\"></span>\r\n            <div className=\"body\">\r\n              <Widget widgetNum=\"1\" fetchedData={fetchedData} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ContainerStyled>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n* {\r\n  font-family: \"Cabin\", sans-serif;\r\n  list-style: none;\r\n}\r\n\r\n.body {\r\n  margin: 0px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: #3B755F;\r\n    font-weight: 700;\r\n  }\r\n\r\n//Badge color themes\r\n:root {\r\n  --badge-color: #2e3a8c;\r\n}\r\n\r\n.blueTheme {\r\n  --badge-color: #2e3a8c;\r\n  --font-color: #F9F9F9\r\n}\r\n\r\n.greenTheme {\r\n  --badge-color: #3B755F;\r\n  --font-color: #F9F9F9\r\n}\r\n\r\n.beigeTheme {\r\n  --badge-color: #F2EBDB;\r\n  --font-color: #3B755F\r\n\r\n}\r\n\r\n.whiteTheme {\r\n  --badge-color: #FFFFFF;\r\n  --font-color: #3B755F\r\n}\r\n\r\n.blackTheme {\r\n  --badge-color: #212121;\r\n  --font-color: #F9F9F9\r\n\r\n}\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}